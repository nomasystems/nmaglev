name: nmaglev
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: ubuntu-20.04
            lsb_release: focal
            otp-version: 23.1-1
          - platform: ubuntu-20.04
            lsb_release: focal
            otp-version: 22.3.4.8-1
          - platform: ubuntu-20.04
            lsb_release: focal
            otp-version: 24.0.2-1
    runs-on: ${{ matrix.platform }}
    steps:

      # Setup
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup git
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p /home/runner/.ssh
          ssh-keyscan github.com >> /home/runner/.ssh/known_hosts
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /home/runner/.ssh/id_rsa
          chmod 600 /home/runner/.ssh/id_rsa
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add /home/runner/.ssh/id_rsa

      # Install Erlang
      - name: Install Erlang/OTP
        run: |
          DEB_NAME="esl-erlang_${{ matrix.otp-version }}~ubuntu~${{ matrix.lsb_release }}_amd64.deb"
          curl -f https://packages.erlang-solutions.com/erlang/debian/pool/$DEB_NAME -o $DEB_NAME
          sudo dpkg --install $DEB_NAME

      # Inspect rebar3 version
      - name: Rebar version
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: rebar3 --version

      # PRE Checks
      - name: Checks
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          rebar3 fmt --check
          rebar3 xref
          rebar3 dialyzer

      # Compile
      - name: Compile
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub actions"
          make

      # Tests
      - name: Run tests
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: make test
      - name: Store test logs
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: ct-logs
          path: _build/test/logs

      # Cover reports
#      - name: Create Cover Reports
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: rebar3 do cover,coveralls send
